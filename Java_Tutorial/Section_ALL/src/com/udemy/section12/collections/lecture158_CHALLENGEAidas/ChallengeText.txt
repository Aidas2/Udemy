    Modify the program so that adding items to the shopping basket doesn't
    actually reduce the stock count but, instead, reserves the requested
    number of items.

    You will need to add a "reserved" field to the StockItem class to store the
    number of items reserved.

    Items can continue to be added to the basket, but it should not be possible to
    reserve more than the available stock of any item. An item's available stock
    is the stock count less the reserved amount.

    The stock count for each item is reduced when a basket is checked out, at which
    point all reserved items in the basket have their actual stock count reduced.

    Once checkout is complete, the contents of the basket are cleared.

    It should also be possible to "unreserve" items that were added to the basket
    by mistake.

    The program should prevent any attempt to unreserve more items than were
    reserved for a basket.

    Add code to Main that will unreserve items after they have been added to the basket,
    as well as unreserving items that have not been added to make sure that the code
    can cope with invalid requests like that.

    After checking out the baskets, display the full stock list and the contents of each
    basket that you created.

PART1
(StockItem class):
03:00 add field reserved, modify getter getQuantityInStock;
04:20 create method reserveStock() // for if condition use method, not field !
05:05 create method unreserveStock();
    // those two methods only returns how mush reserved increased/decreased (not how many left in stock)
09:40 rename method getQuantityInStock to availableQuantity
10:35 create method finaliseStock (to reduce quantity in stock and reserved after checkout);
12:20 update method toString (add reserved);

PART1
(StockList class):
02:20 create method reserveStock();
03:40 create method unreserveStock();
05:00 modify method sellStock();
(Basket class):
10:25 create method removeFromBasket(); //remove quontity, not item itself

PART3
(Basket class):
00:25 create method clearBasket();
(Main class):
01:10 modify method sellItem(); sellStock --> reserveStock
02:35 create method removeItem();
04:50 create method checkOut()
(StockItem class):
6:40 modify compareTo()